{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\Desktop\\\\Car Diagnostics\\\\car-docs\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nfunction App() {\n  _s();\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Mock API response: Booked time slots (formatted as 'YYYY-MM-DD HH:mm')\n    const mockData = {\n      '2025-02-15': ['09:00', '14:00'],\n      // Feb 15 booked at 9 AM & 2 PM\n      '2025-02-20': ['12:00', '16:00'] // Feb 20 booked at 12 PM & 4 PM\n    };\n    setBookedSlots(mockData);\n  }, []);\n\n  // Convert booked slots into event format\n  const events = useMemo(() => Object.entries(bookedSlots).flatMap(([date, times]) => times.map(time => {\n    const start = moment(`${date} ${time}`, 'YYYY-MM-DD HH:mm').toDate();\n    const end = moment(start).add(2, 'hours').toDate();\n    return {\n      title: 'Booked',\n      start,\n      end,\n      allDay: false // Now it’s an hourly event\n    };\n  })), [bookedSlots]);\n\n  // Handle selecting a time slot\n  const handleSelectSlot = ({\n    start\n  }) => {\n    var _bookedSlots$dateStr;\n    const dateStr = moment(start).format('YYYY-MM-DD');\n    const timeStr = moment(start).format('HH:mm');\n\n    // Check if slot is already booked\n    if ((_bookedSlots$dateStr = bookedSlots[dateStr]) !== null && _bookedSlots$dateStr !== void 0 && _bookedSlots$dateStr.includes(timeStr)) {\n      alert(`❌ The slot on ${dateStr} at ${timeStr} is already booked!`);\n      return;\n    }\n    alert(`✅ Booking request for ${dateStr} at ${timeStr}`);\n    navigate(`/booking/${dateStr}/${timeStr}`);\n  };\n\n  // Style booked slots\n  const eventStyleGetter = () => ({\n    style: {\n      backgroundColor: 'red',\n      color: 'white',\n      borderRadius: '5px',\n      textAlign: 'center'\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Booking Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          localizer: localizer,\n          events: events,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          selectable: true,\n          onSelectSlot: handleSelectSlot,\n          step: 30 // 30-minute interval\n          ,\n          timeslots: 4 // 4 slots per hour (so users see quarter-hour options)\n          ,\n          defaultView: \"week\" // Show week view for better hourly display\n          ,\n          views: ['week', 'day'],\n          style: {\n            height: '70vh',\n            minHeight: '500px'\n          },\n          className: \"border-0\",\n          eventPropGetter: eventStyleGetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JDPIASbXE6MNbAdTPQT4BkeFEd8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Calendar","momentLocalizer","moment","useNavigate","jsxDEV","_jsxDEV","localizer","App","_s","bookedSlots","setBookedSlots","currentDate","setCurrentDate","Date","navigate","mockData","events","Object","entries","flatMap","date","times","map","time","start","toDate","end","add","title","allDay","handleSelectSlot","_bookedSlots$dateStr","dateStr","format","timeStr","includes","alert","eventStyleGetter","style","backgroundColor","color","borderRadius","textAlign","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","selectable","onSelectSlot","step","timeslots","defaultView","views","height","minHeight","eventPropGetter","_c","$RefreshReg$"],"sources":["C:/Users/krist/Desktop/Car Diagnostics/car-docs/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst localizer = momentLocalizer(moment);\n\nfunction App() {\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Mock API response: Booked time slots (formatted as 'YYYY-MM-DD HH:mm')\n    const mockData = {\n      '2025-02-15': ['09:00', '14:00'], // Feb 15 booked at 9 AM & 2 PM\n      '2025-02-20': ['12:00', '16:00'], // Feb 20 booked at 12 PM & 4 PM\n    };\n    \n    setBookedSlots(mockData);\n  }, []);\n\n  // Convert booked slots into event format\n  const events = useMemo(\n    () =>\n      Object.entries(bookedSlots).flatMap(([date, times]) =>\n        times.map((time) => {\n          const start = moment(`${date} ${time}`, 'YYYY-MM-DD HH:mm').toDate();\n          const end = moment(start).add(2, 'hours').toDate();\n          return {\n            title: 'Booked',\n            start,\n            end,\n            allDay: false, // Now it’s an hourly event\n          };\n        })\n      ),\n    [bookedSlots]\n  );\n\n  // Handle selecting a time slot\n  const handleSelectSlot = ({ start }) => {\n    const dateStr = moment(start).format('YYYY-MM-DD');\n    const timeStr = moment(start).format('HH:mm');\n\n    // Check if slot is already booked\n    if (bookedSlots[dateStr]?.includes(timeStr)) {\n      alert(`❌ The slot on ${dateStr} at ${timeStr} is already booked!`);\n      return;\n    }\n\n    alert(`✅ Booking request for ${dateStr} at ${timeStr}`);\n    navigate(`/booking/${dateStr}/${timeStr}`);\n  };\n\n  // Style booked slots\n  const eventStyleGetter = () => ({\n    style: {\n      backgroundColor: 'red',\n      color: 'white',\n      borderRadius: '5px',\n      textAlign: 'center',\n    },\n  });\n\n  return (\n    <div className=\"App container mt-5\">\n      <header className=\"text-center mb-4\">\n        <h1>Booking Calendar</h1>\n      </header>\n\n      <div className=\"card shadow\">\n        <div className=\"card-body\">\n          <Calendar\n            localizer={localizer}\n            events={events}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            selectable\n            onSelectSlot={handleSelectSlot}\n            step={30} // 30-minute interval\n            timeslots={4} // 4 slots per hour (so users see quarter-hour options)\n            defaultView=\"week\" // Show week view for better hourly display\n            views={['week', 'day']}\n            style={{ height: '70vh', minHeight: '500px' }}\n            className=\"border-0\"\n            eventPropGetter={eventStyleGetter}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}